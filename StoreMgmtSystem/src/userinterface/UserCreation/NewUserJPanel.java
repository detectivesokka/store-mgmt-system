package userinterface.UserCreation;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import model.Organization.InvDistributorOrganization;
import model.Organization.InvManufacturerOrganization;
import model.Organization.InvTransportationOrganization;
import model.Organization.LocalStoreOrganization;
import model.Organization.OnlineStoreOrganization;
import model.Organization.TaxationOrganization;
import model.StoreMgmtSystem;

/**
 *
 * @author saidutt
 */
public class NewUserJPanel extends javax.swing.JPanel {
    
    
    private StoreMgmtSystem system;
    /**
     * Creates new form NewUserJPanel
     * @param pSystem
     */
    public NewUserJPanel(StoreMgmtSystem pSystem) {
        
        initComponents();
        
        populateUserTypes();
        this.system = pSystem;
    }

    private void populateUserTypes() {
                
        
        for (int i=1; i < 9; i++) {
            
            this.comboUsertype.addItem(getRoleString(i));
        }                
    }
    
    private String getRoleString(int code) {
        
        String roleName;
        
        switch (code) {
            
            case 1 : roleName = "Online Customer";
            break;
            case 2 : roleName = "Online Delivery Man";
            break;            
            case 3 : roleName = "Shop Manager";
            break;
            case 4 : roleName = "Shop Employee";
            break;
            case 5 : roleName = "Govt Tax Auditor";
            break;
            case 6 : roleName = "Goods Transporter";
            break;
            case 7 : roleName = "Goods Manufacturer";
            break;
            case 8 : roleName = "Goods Distributor";
            break;
            default: roleName = "";
        }
        
        return roleName;
    }
    
    private boolean isValidRole (String roleName) {
      
        switch (roleName) {

            case "Online Customer":
                
            case "Online Delivery Man":
                
            case "Shop Manager":
                
            case "Shop Employee":
                
            case "Govt Tax Auditor":
                
            case "Goods Transporter":
                
            case "Goods Manufacturer":
                
            case "Goods Distributor":
                return true;
        }
        return false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fldUsername = new javax.swing.JTextField();
        comboUsertype = new javax.swing.JComboBox<>();
        fldPassword = new javax.swing.JPasswordField();
        btnSubmit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboOrganization = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create user");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setText("Organization");

        comboUsertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        comboUsertype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUsertypeActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel5.setText("User type");

        comboOrganization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(327, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fldUsername)
                            .addComponent(comboUsertype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnSubmit)))
                .addGap(299, 299, 299))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fldUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(fldPassword)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(comboUsertype))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSubmit)
                .addGap(0, 334, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboUsertypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUsertypeActionPerformed
                        
        String roleSelected = (String)this.comboUsertype.getSelectedItem();
        
        if (isValidRole(roleSelected)) {
            
            populateOrganizations(roleSelected);            
        }        
    }//GEN-LAST:event_comboUsertypeActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        
        String pwd = String.valueOf(fldPassword.getPassword());
        
        try  {
            
            if ((!isValidRole((String)this.comboUsertype.getSelectedItem())) || this.comboOrganization.equals("Select an organization")) {
                
                throw new Exception("Select valid role and organization");                
            }
            
            if (pwd.equals("") || ((String)this.fldUsername.getText()).equals("")) {
                
                throw new Exception("Enter valid username and password");                
            }                        
            
            createUserAccount();
            
            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();            
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e.getMessage());            
        }
        
    }//GEN-LAST:event_btnSubmitActionPerformed
    
    private void createUserAccount () {
        
        String organizationName = (String)this.comboOrganization.getSelectedItem();
        String userType = (String) this.comboUsertype.getSelectedItem();
        String pwd = String.valueOf(fldPassword.getPassword());
        
        switch (userType) {
            
            case "Online Customer":
                this.system.getCustomerEnterprise().searchOnlineOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Online Delivery Man":
                this.system.getCustomerEnterprise().searchOnlineOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Shop Manager":
                this.system.getStoreEnterprise().searchLocalStoreOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Shop Employee":
                this.system.getStoreEnterprise().searchLocalStoreOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Govt Tax Auditor":
                this.system.getComplianceEnterprise().searchTaxationOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Goods Transporter":
                this.system.getInventoryEnterprise().searchTransOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Goods Manufacturer":
                this.system.getInventoryEnterprise().searchMfrOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
            case "Goods Distributor":
                this.system.getInventoryEnterprise().searchDisOrganization(organizationName).newUserAccount(this.fldUsername.getText(), pwd, getUserCode(userType));
                break;
                
        }
        
    }
    
    
    private void populateOrganizations(String pRole) {
        
        this.comboOrganization.removeAllItems();
        this.comboOrganization.addItem("Select an organization");
                
        if (pRole.contains("Online")) {
            
            for (OnlineStoreOrganization o : this.system.getCustomerEnterprise().getOnlineStrOrgList()) {
                
                this.comboOrganization.addItem(o.getName());                
            }            
        } else if (pRole.contains("Shop")) {
            
            for (LocalStoreOrganization lso : this.system.getStoreEnterprise().getLocalOrgList()) {
                
                this.comboOrganization.addItem(lso.getName());                
            }       
            
        } else if (pRole.contains("Goods Transporter")) {
            
            for (InvTransportationOrganization ito : this.system.getInventoryEnterprise().getInvTransOrgList()) {
                
                this.comboOrganization.addItem(ito.getName());
            }
            
        } else if (pRole.contains("Goods Manufacturer")) {
            
            for (InvManufacturerOrganization imo : this.system.getInventoryEnterprise().getInvManOrgList()) {
                
                this.comboOrganization.addItem(imo.getName());
            }
            
        } else if (pRole.contains("Goods Distributor")) {
            
            for (InvDistributorOrganization ido : this.system.getInventoryEnterprise().getInvDisOrgList()) {
                
                this.comboOrganization.addItem(ido.getName());
            }
            
        } else {
            
            for (TaxationOrganization tax : this.system.getComplianceEnterprise().getTaxOrgList()) {
                
                this.comboOrganization.addItem(tax.getName());
            }            
        }        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> comboOrganization;
    private javax.swing.JComboBox<String> comboUsertype;
    private javax.swing.JPasswordField fldPassword;
    private javax.swing.JTextField fldUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

    private int getUserCode(String userType) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
